{"ast":null,"code":"import _taggedTemplateLiteral from\"C:\\\\Users\\\\user\\\\Desktop\\\\SBPGIT\\\\DAPP_Staking_SBP\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";import _regeneratorRuntime from\"C:\\\\Users\\\\user\\\\Desktop\\\\SBPGIT\\\\DAPP_Staking_SBP\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\user\\\\Desktop\\\\SBPGIT\\\\DAPP_Staking_SBP\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\user\\\\Desktop\\\\SBPGIT\\\\DAPP_Staking_SBP\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9;import React,{useEffect,useState}from'react';import styled from'styled-components';import shiba from'../assets/shiba.png';import Store from'../store/store';import Input from'./Input';import{Text,Row}from'./style';import{useObserver}from'mobx-react';import{useAlert}from'react-alert';var stakeable=function stakeable(allownce,stakeAmount){return Number(allownce)>=Number(stakeAmount);};var StakingBox=function StakingBox(){var alert=useAlert();var _useState=useState({}),_useState2=_slicedToArray(_useState,2),stakingInfo=_useState2[0],setStakingInfo=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),stakingAmount=_useState4[0],setStakingAmount=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),SA=_useState6[0],setSA=_useState6[1];var _useState7=useState(true),_useState8=_slicedToArray(_useState7,2),disable=_useState8[0],setDisable=_useState8[1];useEffect(function(){if(stakingInfo.storageId&&stakingAmount&&Store.account&&Number(stakingInfo.minAmount)<=Number(stakingAmount*Math.pow(10,18))&&Number(stakingAmount*Math.pow(10,18))<=Number(Store.stakingInfo.SBPBalance)||!stakeable(Store.stakingInfo.allowance,stakingAmount*Math.pow(10,18)))setDisable(false);else setDisable(true);},[Store.stakingInfo.SBPBalance,Store.account,Store.stakingInfo.allowance,stakingAmount,stakingInfo,SA]);var handleSelect=function handleSelect(info){return setStakingInfo(info);};var handleAmount=function handleAmount(e){var value=e.target.value;if(value&&value>0)setStakingAmount(value);if(value&&value>0)setSA(value*Math.pow(10,18));if(!value)setStakingAmount('');if(!value)setSA('');};var handleStake=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(stakeable(Store.stakingInfo.allowance,stakingAmount*Math.pow(10,18))){Store.getSBPBalance().then(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(res){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(res&&Store.account&&stakingAmount>0&&Number(stakingAmount*Math.pow(10,18))<=Number(Store.stakingInfo.SBPBalance))){_context.next=5;break;}_context.next=3;return Store.stakeSBP({amount:SA,storageId:stakingInfo.storageId}).then(function(res){if(res)console.log('box',res);if(res.result){// success\nalert.show(res.msg,{type:'success'});Store.fetchAccountInfo();// TVL, staking balance, total Expected Reward, tier, sbp balance, stakingList\n}else{// fail\nalert.show(res.msg,{type:'error'});}});case 3:_context.next=5;break;case 5:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref2.apply(this,arguments);};}());}else{Store.ApproveMaxBalance().then(function(res){if(res.result){alert.show(res.msg,{typed:'success'});}else{alert.show(res.msg,{type:'error'});}});}case 1:case\"end\":return _context2.stop();}}},_callee2);}));return function handleStake(){return _ref.apply(this,arguments);};}();return useObserver(function(){return/*#__PURE__*/React.createElement(StakingWrapper,null,/*#__PURE__*/React.createElement(SelectWrapper,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Text,{color:\"#ffffff\"},\"Total Value Locked : \"),/*#__PURE__*/React.createElement(Text,{color:\"#f6c179\"},Store.stakingInfo.TVL/Math.pow(10,18),\" SBP\")),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Text,{color:\"#ffffff\"},\"Locked Period : \")),/*#__PURE__*/React.createElement(SelectBoxWrapper,null,Store.stakingPool&&Store.stakingPool.length>0&&Store.stakingPool.map(function(elem,index){return/*#__PURE__*/React.createElement(SelectBox,{checked:stakingInfo.storageId===elem.storageId,onClick:function onClick(){return handleSelect(elem);},onClickCapture:function onClickCapture(){return setStakingAmount('');}},elem.name);})),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Text,{color:\"#ffffff\"},\"Reward rate for \"),/*#__PURE__*/React.createElement(Text,{color:\"#66ac5b\"},stakingInfo.name?\"\".concat(stakingInfo.name,\" : \"):null),/*#__PURE__*/React.createElement(Text,{color:\"#f6c179\"},stakingInfo.rewardPercentage?\"\".concat(stakingInfo.rewardPercentage,\"%\"):null)),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Text,{color:\"#ffffff\"},\"Minimum Amount to Stake: \"),/*#__PURE__*/React.createElement(Text,{color:\"#f6c179\"},stakingInfo.minAmount?\"\".concat(stakingInfo.minAmount/Math.pow(10,18),\" SBP\"):null))),/*#__PURE__*/React.createElement(StakingInfoWrapper,null,/*#__PURE__*/React.createElement(FlexDiv,null,/*#__PURE__*/React.createElement(StakingInfo,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Text,{color:\"#d5ccc8\",width:\"10rem\"},\"Your SBPs in Staking :\",' '),/*#__PURE__*/React.createElement(Text,{color:\"#f6c179\"},Store.stakingInfo.accountStakingTotal/Math.pow(10,18),\" SBP\",' ')),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Text,{color:\"#d5ccc8\",width:\"10rem\"},\"TotalEstimatedRewards :\",' '),/*#__PURE__*/React.createElement(Text,{color:\"#f6c179\"},Store.stakingInfo.totalExpectedReward/Math.pow(10,18),\" SBP\",' ')),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Text,{color:\"#d5ccc8\",width:\"10rem\"},\"Account Tier :\"),/*#__PURE__*/React.createElement(Text,{color:\"#f6c179\"},\" \",Store.stakingInfo.tier,\" \")),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Text,{color:\"#d5ccc8\",width:\"10rem\"},\"Account SBP Balance :\",' '),/*#__PURE__*/React.createElement(Text,{color:\"#f6c179\"},Store.stakingInfo.SBPBalance/Math.pow(10,18),\" SBP \"))),/*#__PURE__*/React.createElement(Logo,{src:shiba})),/*#__PURE__*/React.createElement(Input,{style:{marginTop:'1rem'},onChange:handleAmount,value:stakingAmount}),/*#__PURE__*/React.createElement(FlexDiv,null,/*#__PURE__*/React.createElement(StakeButton,{onClick:handleStake,disabled:disable},stakeable(Store.stakingInfo.allowance,stakingAmount*Math.pow(10,18))?'StakeSBP':'ApproveSBP'))));});};export default StakingBox;var StakingWrapper=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  border-radius: 1rem;\\n  border: solid 0.13rem #f6c179;\\n  margin: 0 1rem 0 1rem;\\n  background-color: #594139;\\n\"])));var SelectWrapper=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  background-color: #74564a;\\n  border-radius: 0.85rem 0.85rem 0 0;\\n  padding: 1rem;\\n\"])));var SelectBoxWrapper=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  padding: 0.5rem;\\n  display: flex;\\n  flex: 1 1 0;\\n\"])));var SelectBox=styled.button(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  border-radius: 0.25rem;\\n  border: \",\";\\n  /* margin: 0.1rem 0.5rem 0.1rem 0.5rem; */\\n  margin: auto 0.2rem auto 0.2rem;\\n  color: \",\";\\n  background-color: \",\";\\n  &:hover {\\n    background-color: #66ac5b;\\n    color: '#74564a';\\n  }\\n  font: BakbakOne;\\n  font-size: 1.2rem;\\n  transition: background-color 0.25s ease-out 100ms;\\n\"])),function(props){return props.checked?'solid 2px #fff':'none';},function(props){return props.checked?'#fff':'#74564a';},function(props){return props.checked?'#66ac5b':'#d5ccc8';});var StakingInfoWrapper=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  padding: 1rem;\\n  border-radius: 0 0 0.85rem 0.85rem;\\n  background-color: #594139;\\n  /* display: flex; */\\n\"])));var StakingInfo=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  flex: auto;\\n  min-width: 11rem;\\n\"])));var Logo=styled.img(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  width: 8rem;\\n  @media (max-width: 500px) {\\n    width: 6rem;\\n  }\\n  @media (max-width: 360px) {\\n    width: 4rem;\\n  }\\n  object-fit: contain;\\n\\n  margin: 0 0 0 1rem;\\n\"])));var FlexDiv=styled.div(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  display: flex;\\n\"])));var StakeButton=styled.button(_templateObject9||(_templateObject9=_taggedTemplateLiteral([\"\\n  width: 7rem;\\n  height: 2rem;\\n  border-radius: 1rem;\\n  border: solid 2px #d5ccc8;\\n  background-color: #66ac5b;\\n  font-family: Teko;\\n  font-size: 1.3rem;\\n  font-weight: 500;\\n  font-stretch: normal;\\n  font-style: normal;\\n  /* line-height: 1; */\\n  letter-spacing: normal;\\n  text-align: center;\\n  color: #fff;\\n  margin: 1rem auto 0 auto;\\n  \",\"\\n\"])),function(props){if(props.disabled){return'border: solid 2px #757575; background-color: #74564a; color: #757575';}});","map":{"version":3,"sources":["C:/Users/user/Desktop/SBPGIT/DAPP_Staking_SBP/src/component/StakingBox.js"],"names":["React","useEffect","useState","styled","shiba","Store","Input","Text","Row","useObserver","useAlert","stakeable","allownce","stakeAmount","Number","StakingBox","alert","stakingInfo","setStakingInfo","stakingAmount","setStakingAmount","SA","setSA","disable","setDisable","storageId","account","minAmount","SBPBalance","allowance","handleSelect","info","handleAmount","e","value","target","handleStake","getSBPBalance","then","res","stakeSBP","amount","console","log","result","show","msg","type","fetchAccountInfo","ApproveMaxBalance","typed","TVL","stakingPool","length","map","elem","index","name","rewardPercentage","accountStakingTotal","totalExpectedReward","tier","marginTop","StakingWrapper","div","SelectWrapper","SelectBoxWrapper","SelectBox","button","props","checked","StakingInfoWrapper","StakingInfo","Logo","img","FlexDiv","StakeButton","disabled"],"mappings":"i2BAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,qBAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,gBAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,OAASC,IAAT,CAAeC,GAAf,KAA0B,SAA1B,CACA,OAASC,WAAT,KAA4B,YAA5B,CACA,OAASC,QAAT,KAAyB,aAAzB,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,QAAD,CAAWC,WAAX,CAA2B,CAC3C,MAAOC,CAAAA,MAAM,CAACF,QAAD,CAAN,EAAoBE,MAAM,CAACD,WAAD,CAAjC,CACD,CAFD,CAGA,GAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvB,GAAMC,CAAAA,KAAK,CAAGN,QAAQ,EAAtB,CACA,cAAsCR,QAAQ,CAAC,EAAD,CAA9C,wCAAOe,WAAP,eAAoBC,cAApB,eACA,eAA0ChB,QAAQ,CAAC,EAAD,CAAlD,yCAAOiB,aAAP,eAAsBC,gBAAtB,eACA,eAAoBlB,QAAQ,CAAC,EAAD,CAA5B,yCAAOmB,EAAP,eAAWC,KAAX,eACA,eAA8BpB,QAAQ,CAAC,IAAD,CAAtC,yCAAOqB,OAAP,eAAgBC,UAAhB,eAEAvB,SAAS,CAAC,UAAM,CACd,GACGgB,WAAW,CAACQ,SAAZ,EACCN,aADD,EAECd,KAAK,CAACqB,OAFP,EAGCZ,MAAM,CAACG,WAAW,CAACU,SAAb,CAAN,EAAiCb,MAAM,CAACK,aAAa,UAAC,EAAD,CAAK,EAAL,CAAd,CAHxC,EAICL,MAAM,CAACK,aAAa,UAAC,EAAD,CAAK,EAAL,CAAd,CAAN,EAAgCL,MAAM,CAACT,KAAK,CAACY,WAAN,CAAkBW,UAAnB,CAJxC,EAKA,CAACjB,SAAS,CAACN,KAAK,CAACY,WAAN,CAAkBY,SAAnB,CAA8BV,aAAa,UAAC,EAAD,CAAK,EAAL,CAA3C,CANZ,CAQEK,UAAU,CAAC,KAAD,CAAV,CARF,IASKA,CAAAA,UAAU,CAAC,IAAD,CAAV,CACN,CAXQ,CAWN,CACDnB,KAAK,CAACY,WAAN,CAAkBW,UADjB,CAEDvB,KAAK,CAACqB,OAFL,CAGDrB,KAAK,CAACY,WAAN,CAAkBY,SAHjB,CAIDV,aAJC,CAKDF,WALC,CAMDI,EANC,CAXM,CAAT,CAoBA,GAAMS,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,IAAI,QAAIb,CAAAA,cAAc,CAACa,IAAD,CAAlB,EAAzB,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,CAAC,CAAI,CACxB,GAAQC,CAAAA,KAAR,CAAkBD,CAAC,CAACE,MAApB,CAAQD,KAAR,CACA,GAAIA,KAAK,EAAIA,KAAK,CAAG,CAArB,CAAwBd,gBAAgB,CAACc,KAAD,CAAhB,CACxB,GAAIA,KAAK,EAAIA,KAAK,CAAG,CAArB,CAAwBZ,KAAK,CAACY,KAAK,UAAC,EAAD,CAAK,EAAL,CAAN,CAAL,CACxB,GAAI,CAACA,KAAL,CAAYd,gBAAgB,CAAC,EAAD,CAAhB,CACZ,GAAI,CAACc,KAAL,CAAYZ,KAAK,CAAC,EAAD,CAAL,CACb,CAND,CAQA,GAAMc,CAAAA,WAAW,0FAAG,wIAClB,GAAIzB,SAAS,CAACN,KAAK,CAACY,WAAN,CAAkBY,SAAnB,CAA8BV,aAAa,UAAC,EAAD,CAAK,EAAL,CAA3C,CAAb,CAAkE,CAChEd,KAAK,CAACgC,aAAN,GAAsBC,IAAtB,2FAA2B,iBAAMC,GAAN,uHAEvBA,GAAG,EACHlC,KAAK,CAACqB,OADN,EAEAP,aAAa,CAAG,CAFhB,EAGAL,MAAM,CAACK,aAAa,UAAC,EAAD,CAAK,EAAL,CAAd,CAAN,EAAgCL,MAAM,CAACT,KAAK,CAACY,WAAN,CAAkBW,UAAnB,CALf,gDAOjBvB,CAAAA,KAAK,CAACmC,QAAN,CAAe,CACnBC,MAAM,CAAEpB,EADW,CAEnBI,SAAS,CAAER,WAAW,CAACQ,SAFJ,CAAf,EAGHa,IAHG,CAGE,SAAAC,GAAG,CAAI,CACb,GAAIA,GAAJ,CAASG,OAAO,CAACC,GAAR,CAAY,KAAZ,CAAmBJ,GAAnB,EACT,GAAIA,GAAG,CAACK,MAAR,CAAgB,CACd;AACA5B,KAAK,CAAC6B,IAAN,CAAWN,GAAG,CAACO,GAAf,CAAoB,CAAEC,IAAI,CAAE,SAAR,CAApB,EACA1C,KAAK,CAAC2C,gBAAN,GACA;AACD,CALD,IAKO,CACL;AACAhC,KAAK,CAAC6B,IAAN,CAAWN,GAAG,CAACO,GAAf,CAAoB,CAAEC,IAAI,CAAE,OAAR,CAApB,EACD,CACF,CAdK,CAPiB,oFAA3B,iEA0BD,CA3BD,IA2BO,CACL1C,KAAK,CAAC4C,iBAAN,GAA0BX,IAA1B,CAA+B,SAAAC,GAAG,CAAI,CACpC,GAAIA,GAAG,CAACK,MAAR,CAAgB,CACd5B,KAAK,CAAC6B,IAAN,CAAWN,GAAG,CAACO,GAAf,CAAoB,CAAEI,KAAK,CAAE,SAAT,CAApB,EACD,CAFD,IAEO,CACLlC,KAAK,CAAC6B,IAAN,CAAWN,GAAG,CAACO,GAAf,CAAoB,CAAEC,IAAI,CAAE,OAAR,CAApB,EACD,CACF,CAND,EAOD,CApCiB,wDAAH,kBAAXX,CAAAA,WAAW,0CAAjB,CAsCA,MAAO3B,CAAAA,WAAW,CAAC,UAAM,CACvB,mBACE,oBAAC,cAAD,mBACE,oBAAC,aAAD,mBACE,oBAAC,GAAD,mBACE,oBAAC,IAAD,EAAM,KAAK,CAAC,SAAZ,0BADF,cAEE,oBAAC,IAAD,EAAM,KAAK,CAAC,SAAZ,EAAuBJ,KAAK,CAACY,WAAN,CAAkBkC,GAAlB,UAAsB,EAAtB,CAA0B,EAA1B,CAAvB,QAFF,CADF,cAKE,oBAAC,GAAD,mBACE,oBAAC,IAAD,EAAM,KAAK,CAAC,SAAZ,qBADF,CALF,cAQE,oBAAC,gBAAD,MACG9C,KAAK,CAAC+C,WAAN,EACC/C,KAAK,CAAC+C,WAAN,CAAkBC,MAAlB,CAA2B,CAD5B,EAEChD,KAAK,CAAC+C,WAAN,CAAkBE,GAAlB,CAAsB,SAACC,IAAD,CAAOC,KAAP,CAAiB,CACrC,mBACE,oBAAC,SAAD,EACE,OAAO,CAAEvC,WAAW,CAACQ,SAAZ,GAA0B8B,IAAI,CAAC9B,SAD1C,CAEE,OAAO,CAAE,yBAAMK,CAAAA,YAAY,CAACyB,IAAD,CAAlB,EAFX,CAGE,cAAc,CAAE,gCAAMnC,CAAAA,gBAAgB,CAAC,EAAD,CAAtB,EAHlB,EAKGmC,IAAI,CAACE,IALR,CADF,CASD,CAVD,CAHJ,CARF,cAuBE,oBAAC,GAAD,mBACE,oBAAC,IAAD,EAAM,KAAK,CAAC,SAAZ,qBADF,cAEE,oBAAC,IAAD,EAAM,KAAK,CAAC,SAAZ,EACGxC,WAAW,CAACwC,IAAZ,WAAsBxC,WAAW,CAACwC,IAAlC,QAA8C,IADjD,CAFF,cAKE,oBAAC,IAAD,EAAM,KAAK,CAAC,SAAZ,EACGxC,WAAW,CAACyC,gBAAZ,WACMzC,WAAW,CAACyC,gBADlB,MAEG,IAHN,CALF,CAvBF,cAkCE,oBAAC,GAAD,mBACE,oBAAC,IAAD,EAAM,KAAK,CAAC,SAAZ,8BADF,cAEE,oBAAC,IAAD,EAAM,KAAK,CAAC,SAAZ,EACGzC,WAAW,CAACU,SAAZ,WAA2BV,WAAW,CAACU,SAAZ,UAAsB,EAAtB,CAA0B,EAA1B,CAA3B,SAAgE,IADnE,CAFF,CAlCF,CADF,cA0CE,oBAAC,kBAAD,mBACE,oBAAC,OAAD,mBACE,oBAAC,WAAD,mBACE,oBAAC,GAAD,mBACE,oBAAC,IAAD,EAAM,KAAK,CAAC,SAAZ,CAAsB,KAAK,CAAC,OAA5B,2BACyB,GADzB,CADF,cAIE,oBAAC,IAAD,EAAM,KAAK,CAAC,SAAZ,EACGtB,KAAK,CAACY,WAAN,CAAkB0C,mBAAlB,UAAsC,EAAtC,CAA0C,EAA1C,CADH,QACqD,GADrD,CAJF,CADF,cASE,oBAAC,GAAD,mBACE,oBAAC,IAAD,EAAM,KAAK,CAAC,SAAZ,CAAsB,KAAK,CAAC,OAA5B,4BAC0B,GAD1B,CADF,cAIE,oBAAC,IAAD,EAAM,KAAK,CAAC,SAAZ,EACGtD,KAAK,CAACY,WAAN,CAAkB2C,mBAAlB,UAAsC,EAAtC,CAA0C,EAA1C,CADH,QACqD,GADrD,CAJF,CATF,cAiBE,oBAAC,GAAD,mBACE,oBAAC,IAAD,EAAM,KAAK,CAAC,SAAZ,CAAsB,KAAK,CAAC,OAA5B,mBADF,cAIE,oBAAC,IAAD,EAAM,KAAK,CAAC,SAAZ,MAAwBvD,KAAK,CAACY,WAAN,CAAkB4C,IAA1C,KAJF,CAjBF,cAuBE,oBAAC,GAAD,mBACE,oBAAC,IAAD,EAAM,KAAK,CAAC,SAAZ,CAAsB,KAAK,CAAC,OAA5B,0BACwB,GADxB,CADF,cAIE,oBAAC,IAAD,EAAM,KAAK,CAAC,SAAZ,EAAuBxD,KAAK,CAACY,WAAN,CAAkBW,UAAlB,UAA6B,EAA7B,CAAiC,EAAjC,CAAvB,SAJF,CAvBF,CADF,cA+BE,oBAAC,IAAD,EAAM,GAAG,CAAExB,KAAX,EA/BF,CADF,cAkCE,oBAAC,KAAD,EACE,KAAK,CAAE,CAAE0D,SAAS,CAAE,MAAb,CADT,CAEE,QAAQ,CAAE9B,YAFZ,CAGE,KAAK,CAAEb,aAHT,EAlCF,cAuCE,oBAAC,OAAD,mBACE,oBAAC,WAAD,EAAa,OAAO,CAAEiB,WAAtB,CAAmC,QAAQ,CAAEb,OAA7C,EACGZ,SAAS,CAACN,KAAK,CAACY,WAAN,CAAkBY,SAAnB,CAA8BV,aAAa,UAAC,EAAD,CAAK,EAAL,CAA3C,CAAT,CACG,UADH,CAEG,YAHN,CADF,CAvCF,CA1CF,CADF,CA4FD,CA7FiB,CAAlB,CA8FD,CAzKD,CA2KA,cAAeJ,CAAAA,UAAf,CAEA,GAAMgD,CAAAA,cAAc,CAAG5D,MAAM,CAAC6D,GAAV,qLAApB,CAMA,GAAMC,CAAAA,aAAa,CAAG9D,MAAM,CAAC6D,GAAV,4JAAnB,CAKA,GAAME,CAAAA,gBAAgB,CAAG/D,MAAM,CAAC6D,GAAV,2HAAtB,CAKA,GAAMG,CAAAA,SAAS,CAAGhE,MAAM,CAACiE,MAAV,oZAEH,SAAAC,KAAK,QAAKA,CAAAA,KAAK,CAACC,OAAN,CAAgB,gBAAhB,CAAmC,MAAxC,EAFF,CAKJ,SAAAD,KAAK,QAAKA,CAAAA,KAAK,CAACC,OAAN,CAAgB,MAAhB,CAAyB,SAA9B,EALD,CAMO,SAAAD,KAAK,QAAKA,CAAAA,KAAK,CAACC,OAAN,CAAgB,SAAhB,CAA4B,SAAjC,EANZ,CAAf,CAeA,GAAMC,CAAAA,kBAAkB,CAAGpE,MAAM,CAAC6D,GAAV,oLAAxB,CAOA,GAAMQ,CAAAA,WAAW,CAAGrE,MAAM,CAAC6D,GAAV,yGAAjB,CAIA,GAAMS,CAAAA,IAAI,CAAGtE,MAAM,CAACuE,GAAV,kPAAV,CAaA,GAAMC,CAAAA,OAAO,CAAGxE,MAAM,CAAC6D,GAAV,uFAAb,CAIA,GAAMY,CAAAA,WAAW,CAAGzE,MAAM,CAACiE,MAAV,0aAgBb,SAAAC,KAAK,CAAI,CACT,GAAIA,KAAK,CAACQ,QAAV,CAAoB,CAClB,MAAO,sEAAP,CACD,CACF,CApBc,CAAjB","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport shiba from '../assets/shiba.png';\nimport Store from '../store/store';\nimport Input from './Input';\nimport { Text, Row } from './style';\nimport { useObserver } from 'mobx-react';\nimport { useAlert } from 'react-alert';\n\nconst stakeable = (allownce, stakeAmount) => {\n  return Number(allownce) >= Number(stakeAmount);\n};\nconst StakingBox = () => {\n  const alert = useAlert();\n  const [stakingInfo, setStakingInfo] = useState({});\n  const [stakingAmount, setStakingAmount] = useState('');\n  const [SA, setSA] = useState('');\n  const [disable, setDisable] = useState(true);\n  \n  useEffect(() => {\n    if (\n      (stakingInfo.storageId &&\n        stakingAmount &&\n        Store.account &&\n        Number(stakingInfo.minAmount) <= Number(stakingAmount*10**18) &&\n        Number(stakingAmount*10**18) <= Number(Store.stakingInfo.SBPBalance)) ||\n      !stakeable(Store.stakingInfo.allowance, stakingAmount*10**18)\n    )\n      setDisable(false);\n    else setDisable(true);\n  }, [\n    Store.stakingInfo.SBPBalance,\n    Store.account,\n    Store.stakingInfo.allowance,\n    stakingAmount,\n    stakingInfo,\n    SA,\n  ]);\n\n  const handleSelect = info => setStakingInfo(info);\n\n  const handleAmount = e => {\n    const { value } = e.target;\n    if (value && value > 0) setStakingAmount(value);\n    if (value && value > 0) setSA(value*10**18);\n    if (!value) setStakingAmount('');\n    if (!value) setSA('');\n  };\n\n  const handleStake = async () => {\n    if (stakeable(Store.stakingInfo.allowance, stakingAmount*10**18)) {\n      Store.getSBPBalance().then(async res => {\n        if (\n          res &&\n          Store.account &&\n          stakingAmount > 0 &&\n          Number(stakingAmount*10**18) <= Number(Store.stakingInfo.SBPBalance)\n        ) {\n          await Store.stakeSBP({\n            amount: SA,\n            storageId: stakingInfo.storageId,\n          }).then(res => {\n            if (res) console.log('box', res);\n            if (res.result) {\n              // success\n              alert.show(res.msg, { type: 'success' });\n              Store.fetchAccountInfo();\n              // TVL, staking balance, total Expected Reward, tier, sbp balance, stakingList\n            } else {\n              // fail\n              alert.show(res.msg, { type: 'error' });\n            }\n          });\n        } else {\n          //balance err\n        }\n      });\n    } else {\n      Store.ApproveMaxBalance().then(res => {\n        if (res.result) {\n          alert.show(res.msg, { typed: 'success' });\n        } else {\n          alert.show(res.msg, { type: 'error' });\n        }\n      });\n    }\n  };\n  return useObserver(() => {\n    return (\n      <StakingWrapper>\n        <SelectWrapper>\n          <Row>\n            <Text color=\"#ffffff\">Total Value Locked : </Text>\n            <Text color=\"#f6c179\">{Store.stakingInfo.TVL/10**18} SBP</Text>\n          </Row>\n          <Row>\n            <Text color=\"#ffffff\">Locked Period : </Text>\n          </Row>\n          <SelectBoxWrapper>\n            {Store.stakingPool &&\n              Store.stakingPool.length > 0 &&\n              Store.stakingPool.map((elem, index) => {\n                return (\n                  <SelectBox\n                    checked={stakingInfo.storageId === elem.storageId}\n                    onClick={() => handleSelect(elem)}\n                    onClickCapture={() => setStakingAmount('')}\n                  >\n                    {elem.name}\n                  </SelectBox>\n                );\n              })}\n          </SelectBoxWrapper>\n          <Row>\n            <Text color=\"#ffffff\">Reward rate for </Text>\n            <Text color=\"#66ac5b\">\n              {stakingInfo.name ? `${stakingInfo.name} : ` : null}\n            </Text>\n            <Text color=\"#f6c179\">\n              {stakingInfo.rewardPercentage\n                ? `${stakingInfo.rewardPercentage}%`\n                : null}\n            </Text>\n          </Row>\n          <Row>\n            <Text color=\"#ffffff\">Minimum Amount to Stake: </Text>\n            <Text color=\"#f6c179\">\n              {stakingInfo.minAmount ? `${stakingInfo.minAmount/10**18} SBP` : null}\n            </Text>\n          </Row>\n        </SelectWrapper>\n        <StakingInfoWrapper>\n          <FlexDiv>\n            <StakingInfo>\n              <Row>\n                <Text color=\"#d5ccc8\" width=\"10rem\">\n                  Your SBPs in Staking :{' '}\n                </Text>\n                <Text color=\"#f6c179\">\n                  {Store.stakingInfo.accountStakingTotal/10**18} SBP{' '}\n                </Text>\n              </Row>\n              <Row>\n                <Text color=\"#d5ccc8\" width=\"10rem\">\n                  TotalEstimatedRewards :{' '}\n                </Text>\n                <Text color=\"#f6c179\">\n                  {Store.stakingInfo.totalExpectedReward/10**18} SBP{' '}\n                </Text>\n              </Row>\n              <Row>\n                <Text color=\"#d5ccc8\" width=\"10rem\">\n                  Account Tier :\n                </Text>\n                <Text color=\"#f6c179\"> {Store.stakingInfo.tier} </Text>\n              </Row>\n              <Row>\n                <Text color=\"#d5ccc8\" width=\"10rem\">\n                  Account SBP Balance :{' '}\n                </Text>\n                <Text color=\"#f6c179\">{Store.stakingInfo.SBPBalance/10**18} SBP </Text>\n              </Row>\n            </StakingInfo>\n            <Logo src={shiba} />\n          </FlexDiv>\n          <Input\n            style={{ marginTop: '1rem' }}\n            onChange={handleAmount}\n            value={stakingAmount}\n          />\n          <FlexDiv>\n            <StakeButton onClick={handleStake} disabled={disable}>\n              {stakeable(Store.stakingInfo.allowance, stakingAmount*10**18)\n                ? 'StakeSBP'\n                : 'ApproveSBP'}\n            </StakeButton>\n          </FlexDiv>\n        </StakingInfoWrapper>\n      </StakingWrapper>\n    );\n  });\n};\n\nexport default StakingBox;\n\nconst StakingWrapper = styled.div`\n  border-radius: 1rem;\n  border: solid 0.13rem #f6c179;\n  margin: 0 1rem 0 1rem;\n  background-color: #594139;\n`;\nconst SelectWrapper = styled.div`\n  background-color: #74564a;\n  border-radius: 0.85rem 0.85rem 0 0;\n  padding: 1rem;\n`;\nconst SelectBoxWrapper = styled.div`\n  padding: 0.5rem;\n  display: flex;\n  flex: 1 1 0;\n`;\nconst SelectBox = styled.button`\n  border-radius: 0.25rem;\n  border: ${props => (props.checked ? 'solid 2px #fff' : 'none')};\n  /* margin: 0.1rem 0.5rem 0.1rem 0.5rem; */\n  margin: auto 0.2rem auto 0.2rem;\n  color: ${props => (props.checked ? '#fff' : '#74564a')};\n  background-color: ${props => (props.checked ? '#66ac5b' : '#d5ccc8')};\n  &:hover {\n    background-color: #66ac5b;\n    color: '#74564a';\n  }\n  font: BakbakOne;\n  font-size: 1.2rem;\n  transition: background-color 0.25s ease-out 100ms;\n`;\nconst StakingInfoWrapper = styled.div`\n  padding: 1rem;\n  border-radius: 0 0 0.85rem 0.85rem;\n  background-color: #594139;\n  /* display: flex; */\n`;\n\nconst StakingInfo = styled.div`\n  flex: auto;\n  min-width: 11rem;\n`;\nconst Logo = styled.img`\n  width: 8rem;\n  @media (max-width: 500px) {\n    width: 6rem;\n  }\n  @media (max-width: 360px) {\n    width: 4rem;\n  }\n  object-fit: contain;\n\n  margin: 0 0 0 1rem;\n`;\n\nconst FlexDiv = styled.div`\n  display: flex;\n`;\n\nconst StakeButton = styled.button`\n  width: 7rem;\n  height: 2rem;\n  border-radius: 1rem;\n  border: solid 2px #d5ccc8;\n  background-color: #66ac5b;\n  font-family: Teko;\n  font-size: 1.3rem;\n  font-weight: 500;\n  font-stretch: normal;\n  font-style: normal;\n  /* line-height: 1; */\n  letter-spacing: normal;\n  text-align: center;\n  color: #fff;\n  margin: 1rem auto 0 auto;\n  ${props => {\n    if (props.disabled) {\n      return 'border: solid 2px #757575; background-color: #74564a; color: #757575';\n    }\n  }}\n`;\n"]},"metadata":{},"sourceType":"module"}