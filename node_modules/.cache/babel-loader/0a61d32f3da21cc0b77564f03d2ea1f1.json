{"ast":null,"code":"import _taggedTemplateLiteral from\"C:\\\\Users\\\\user\\\\Desktop\\\\shibapad_staking-main (2)\\\\shibapad_staking-main\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9;import React,{useState,useEffect}from'react';import styled from'styled-components';import shibaFace from'../assets/shibaLogo.png';import{useObserver}from'mobx-react';import{Text}from'./style';import Store from'../store/store';import{useAlert}from'react-alert';var Header=function Header(){// Requires logout logic\nvar alert=useAlert();var handleConnect=function handleConnect(){Store.connectWallet().then(function(res){if(res.result){alert.show(res.msg,{type:'success'});Store.addAccountListner(function(){return Store.fetchAccountInfo();});}else{alert.show(res.msg,{type:'error'});}});};return useObserver(function(){return/*#__PURE__*/React.createElement(HeaderContainer,null,/*#__PURE__*/React.createElement(ImgWrapper,null,/*#__PURE__*/React.createElement(Logo,{src:shibaFace})),/*#__PURE__*/React.createElement(TitleContainer,null,/*#__PURE__*/React.createElement(Title,null,\"SHIBAPAD\"),/*#__PURE__*/React.createElement(Description,null,\"STAKING\")),/*#__PURE__*/React.createElement(ButtonWrapper,null,Store.account&&Store.stakingContract?/*#__PURE__*/React.createElement(TextWrapper,null,/*#__PURE__*/React.createElement(Text,{color:\"#d5ccc8\"},\"connected \"),/*#__PURE__*/React.createElement(Text,{color:\"#f6c179\"},\"address : \"),/*#__PURE__*/React.createElement(Text,{color:\"#f6c179\",style:{overflow:'hidden',textOverflow:'ellipsis',whiteSpace:'nowrap'},title:Store.account},Store.account)):/*#__PURE__*/React.createElement(Button,{onClick:handleConnect},\"CONNECT\")));});};export default Header;var HeaderContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  max-height: 5rem;\\n  padding: 0 0 3rem 0;\\n\"])));var ImgWrapper=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  flex: 1;\\n  display: flex;\\n  margin: 0 -1rem 0 1rem;\\n  width: 25%;\\n\"])));var Logo=styled.img(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  width: 80%;\\n  object-fit: contain;\\n\"])));var TitleContainer=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  flex: 2;\\n  display: flex;\\n  flex-direction: column;\\n  padding: 0 1rem;\\n  margin: auto;\\n\"])));var Title=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  width: inherit;\\n  font-family: Teko;\\n  font-size: 3rem;\\n  font-weight: 700;\\n  font-stretch: normal;\\n  font-style: normal;\\n  line-height: normal;\\n  letter-spacing: normal;\\n  text-align: center;\\n  color: #fff;\\n  @media (max-width: 380px) {\\n    font-size: 1.5rem;\\n  }\\n\"])));var Description=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  width: inherit;\\n  font-family: Teko;\\n  font-size: 2rem;\\n  font-weight: 500;\\n  font-stretch: normal;\\n  font-style: normal;\\n  line-height: 1;\\n  letter-spacing: 3.2px;\\n  text-align: center;\\n  color: #fff;\\n  @media (max-width: 380px) {\\n    font-size: 1rem;\\n  }\\n\"])));var ButtonWrapper=styled.div(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  flex: 1;\\n  max-width: 25%;\\n  display: flex;\\n  margin: 0 1rem 0 -1rem;\\n\"])));var Button=styled.button(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  width: 4.8rem;\\n  height: 2rem;\\n  border-radius: 1rem;\\n  border: solid 2px #d5ccc8;\\n  background-color: #66ac5b;\\n  font-family: Teko;\\n  font-size: 1.3rem;\\n  font-weight: 500;\\n  font-stretch: normal;\\n  font-style: normal;\\n  /* line-height: 1; */\\n  letter-spacing: normal;\\n  text-align: center;\\n  color: #fff;\\n  margin: auto;\\n\"])));var TextWrapper=styled.div(_templateObject9||(_templateObject9=_taggedTemplateLiteral([\"\\n  margin: auto;\\n  width: 100%;\\n  display: flex;\\n  flex-direction: column;\\n\"])));","map":{"version":3,"sources":["C:/Users/user/Desktop/shibapad_staking-main (2)/shibapad_staking-main/src/component/Header.js"],"names":["React","useState","useEffect","styled","shibaFace","useObserver","Text","Store","useAlert","Header","alert","handleConnect","connectWallet","then","res","result","show","msg","type","addAccountListner","fetchAccountInfo","account","stakingContract","overflow","textOverflow","whiteSpace","HeaderContainer","div","ImgWrapper","Logo","img","TitleContainer","Title","Description","ButtonWrapper","Button","button","TextWrapper"],"mappings":"kXAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CACA,OAASC,WAAT,KAA4B,YAA5B,CACA,OAASC,IAAT,KAAqB,SAArB,CACA,MAAOC,CAAAA,KAAP,KAAkB,gBAAlB,CAEA,OAASC,QAAT,KAAyB,aAAzB,CACA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnB;AAEA,GAAMC,CAAAA,KAAK,CAAGF,QAAQ,EAAtB,CAEA,GAAMG,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1BJ,KAAK,CAACK,aAAN,GAAsBC,IAAtB,CAA2B,SAAAC,GAAG,CAAI,CAChC,GAAIA,GAAG,CAACC,MAAR,CAAgB,CACdL,KAAK,CAACM,IAAN,CAAWF,GAAG,CAACG,GAAf,CAAoB,CAAEC,IAAI,CAAE,SAAR,CAApB,EACAX,KAAK,CAACY,iBAAN,CAAwB,iBAAMZ,CAAAA,KAAK,CAACa,gBAAN,EAAN,EAAxB,EACD,CAHD,IAGO,CACLV,KAAK,CAACM,IAAN,CAAWF,GAAG,CAACG,GAAf,CAAoB,CAAEC,IAAI,CAAE,OAAR,CAApB,EACD,CACF,CAPD,EAQD,CATD,CAUA,MAAOb,CAAAA,WAAW,CAAC,UAAM,CACvB,mBACE,oBAAC,eAAD,mBACE,oBAAC,UAAD,mBACE,oBAAC,IAAD,EAAM,GAAG,CAAED,SAAX,EADF,CADF,cAIE,oBAAC,cAAD,mBACE,oBAAC,KAAD,iBADF,cAEE,oBAAC,WAAD,gBAFF,CAJF,cAQE,oBAAC,aAAD,MACGG,KAAK,CAACc,OAAN,EAAiBd,KAAK,CAACe,eAAvB,cACC,oBAAC,WAAD,mBACE,oBAAC,IAAD,EAAM,KAAK,CAAC,SAAZ,eADF,cAEE,oBAAC,IAAD,EAAM,KAAK,CAAC,SAAZ,eAFF,cAGE,oBAAC,IAAD,EACE,KAAK,CAAC,SADR,CAEE,KAAK,CAAE,CACLC,QAAQ,CAAE,QADL,CAELC,YAAY,CAAE,UAFT,CAGLC,UAAU,CAAE,QAHP,CAFT,CAOE,KAAK,CAAElB,KAAK,CAACc,OAPf,EASGd,KAAK,CAACc,OATT,CAHF,CADD,cAiBC,oBAAC,MAAD,EAAQ,OAAO,CAAEV,aAAjB,YAlBJ,CARF,CADF,CAgCD,CAjCiB,CAAlB,CAkCD,CAjDD,CAkDA,cAAeF,CAAAA,MAAf,CACA,GAAMiB,CAAAA,eAAe,CAAGvB,MAAM,CAACwB,GAAV,kIAArB,CAKA,GAAMC,CAAAA,UAAU,CAAGzB,MAAM,CAACwB,GAAV,6IAAhB,CAMA,GAAME,CAAAA,IAAI,CAAG1B,MAAM,CAAC2B,GAAV,4GAAV,CAIA,GAAMC,CAAAA,cAAc,CAAG5B,MAAM,CAACwB,GAAV,mKAApB,CAOA,GAAMK,CAAAA,KAAK,CAAG7B,MAAM,CAACwB,GAAV,6VAAX,CAeA,GAAMM,CAAAA,WAAW,CAAG9B,MAAM,CAACwB,GAAV,qVAAjB,CAeA,GAAMO,CAAAA,aAAa,CAAG/B,MAAM,CAACwB,GAAV,iJAAnB,CAMA,GAAMQ,CAAAA,MAAM,CAAGhC,MAAM,CAACiC,MAAV,yZAAZ,CAiBA,GAAMC,CAAAA,WAAW,CAAGlC,MAAM,CAACwB,GAAV,mJAAjB","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport shibaFace from '../assets/shibaLogo.png';\nimport { useObserver } from 'mobx-react';\nimport { Text } from './style';\nimport Store from '../store/store';\n\nimport { useAlert } from 'react-alert';\nconst Header = () => {\n  // Requires logout logic\n\n  const alert = useAlert();\n\n  const handleConnect = () => {\n    Store.connectWallet().then(res => {\n      if (res.result) {\n        alert.show(res.msg, { type: 'success' });\n        Store.addAccountListner(() => Store.fetchAccountInfo());\n      } else {\n        alert.show(res.msg, { type: 'error' });\n      }\n    });\n  };\n  return useObserver(() => {\n    return (\n      <HeaderContainer>\n        <ImgWrapper>\n          <Logo src={shibaFace} />\n        </ImgWrapper>\n        <TitleContainer>\n          <Title>SHIBAPAD</Title>\n          <Description>STAKING</Description>\n        </TitleContainer>\n        <ButtonWrapper>\n          {Store.account && Store.stakingContract ? (\n            <TextWrapper>\n              <Text color=\"#d5ccc8\">connected </Text>\n              <Text color=\"#f6c179\">address : </Text>\n              <Text\n                color=\"#f6c179\"\n                style={{\n                  overflow: 'hidden',\n                  textOverflow: 'ellipsis',\n                  whiteSpace: 'nowrap',\n                }}\n                title={Store.account}\n              >\n                {Store.account}\n              </Text>\n            </TextWrapper>\n          ) : (\n            <Button onClick={handleConnect}>CONNECT</Button>\n          )}\n        </ButtonWrapper>\n      </HeaderContainer>\n    );\n  });\n};\nexport default Header;\nconst HeaderContainer = styled.div`\n  display: flex;\n  max-height: 5rem;\n  padding: 0 0 3rem 0;\n`;\nconst ImgWrapper = styled.div`\n  flex: 1;\n  display: flex;\n  margin: 0 -1rem 0 1rem;\n  width: 25%;\n`;\nconst Logo = styled.img`\n  width: 80%;\n  object-fit: contain;\n`;\nconst TitleContainer = styled.div`\n  flex: 2;\n  display: flex;\n  flex-direction: column;\n  padding: 0 1rem;\n  margin: auto;\n`;\nconst Title = styled.div`\n  width: inherit;\n  font-family: Teko;\n  font-size: 3rem;\n  font-weight: 700;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: normal;\n  letter-spacing: normal;\n  text-align: center;\n  color: #fff;\n  @media (max-width: 380px) {\n    font-size: 1.5rem;\n  }\n`;\nconst Description = styled.div`\n  width: inherit;\n  font-family: Teko;\n  font-size: 2rem;\n  font-weight: 500;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1;\n  letter-spacing: 3.2px;\n  text-align: center;\n  color: #fff;\n  @media (max-width: 380px) {\n    font-size: 1rem;\n  }\n`;\nconst ButtonWrapper = styled.div`\n  flex: 1;\n  max-width: 25%;\n  display: flex;\n  margin: 0 1rem 0 -1rem;\n`;\nconst Button = styled.button`\n  width: 4.8rem;\n  height: 2rem;\n  border-radius: 1rem;\n  border: solid 2px #d5ccc8;\n  background-color: #66ac5b;\n  font-family: Teko;\n  font-size: 1.3rem;\n  font-weight: 500;\n  font-stretch: normal;\n  font-style: normal;\n  /* line-height: 1; */\n  letter-spacing: normal;\n  text-align: center;\n  color: #fff;\n  margin: auto;\n`;\nconst TextWrapper = styled.div`\n  margin: auto;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n"]},"metadata":{},"sourceType":"module"}