{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\SBPGIT\\\\DAPP_Staking_SBP\\\\src\\\\component\\\\StakingBox.js\";\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport shiba from '../assets/shiba.png';\nimport Store from '../store/store';\nimport Input from './Input';\nimport { Text, Row } from './style';\nimport { useObserver } from 'mobx-react';\nimport { useAlert } from 'react-alert';\n\nconst stakeable = (allownce, stakeAmount) => {\n  return Number(allownce) >= Number(stakeAmount);\n};\n\nconst StakingBox = () => {\n  const alert = useAlert();\n  const [stakingInfo, setStakingInfo] = useState({});\n  const [stakingAmount, setStakingAmount] = useState('');\n  const [SA, setSA] = useState('');\n  const [disable, setDisable] = useState(true);\n  useEffect(() => {\n    if (stakingInfo.storageId && SA && Store.account && Number(stakingInfo.minAmount) <= Number(SA) && Number(SA) <= Number(Store.stakingInfo.SBPBalance) || !stakeable(Store.stakingInfo.allowance, SA)) setDisable(false);else setDisable(true);\n  }, [Store.stakingInfo.SBPBalance, Store.account, Store.stakingInfo.allowance, stakingAmount, stakingInfo, SA]);\n\n  const handleSelect = info => setStakingInfo(info);\n\n  const handleAmount = e => {\n    const {\n      value\n    } = e.target;\n    if (value && value > 0) setStakingAmount(value);\n    if (value && value > 0) setSA(value * 1000000000000000000);\n    if (!value) setStakingAmount('');\n    if (!value) setSA('');\n  };\n\n  const handleStake = async () => {\n    if (stakeable(Store.stakingInfo.allowance, SA)) {\n      Store.getSBPBalance().then(async res => {\n        if (res && Store.account && stakingAmount > 0 && Number(SA) <= Number(Store.stakingInfo.SBPBalance)) {\n          await Store.stakeSBP({\n            amount: SA,\n            storageId: stakingInfo.storageId\n          }).then(res => {\n            if (res) console.log('box', res);\n\n            if (res.result) {\n              // success\n              alert.show(res.msg, {\n                type: 'success'\n              });\n              Store.fetchAccountInfo(); // TVL, staking balance, total Expected Reward, tier, sbp balance, stakingList\n            } else {\n              // fail\n              alert.show(res.msg, {\n                type: 'error'\n              });\n            }\n          });\n        } else {//balance err\n        }\n      });\n    } else {\n      Store.ApproveMaxBalance().then(res => {\n        if (res.result) {\n          alert.show(res.msg, {\n            typed: 'success'\n          });\n        } else {\n          alert.show(res.msg, {\n            type: 'error'\n          });\n        }\n      });\n    }\n  };\n\n  return useObserver(() => {\n    return /*#__PURE__*/React.createElement(StakingWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(SelectWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      color: \"#ffffff\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, \"Total Value Locked : \"), /*#__PURE__*/React.createElement(Text, {\n      color: \"#f6c179\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, Store.stakingInfo.TVL / 10 ** 18, \" SBP\")), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      color: \"#ffffff\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, \"Locked Period : \")), /*#__PURE__*/React.createElement(SelectBoxWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, Store.stakingPool && Store.stakingPool.length > 0 && Store.stakingPool.map((elem, index) => {\n      return /*#__PURE__*/React.createElement(SelectBox, {\n        checked: stakingInfo.storageId === elem.storageId,\n        onClick: () => handleSelect(elem),\n        onClickCapture: () => setStakingAmount(''),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 19\n        }\n      }, elem.name);\n    })), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      color: \"#ffffff\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, \"Reward rate for \"), /*#__PURE__*/React.createElement(Text, {\n      color: \"#66ac5b\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, stakingInfo.name ? `${stakingInfo.name} : ` : null), /*#__PURE__*/React.createElement(Text, {\n      color: \"#f6c179\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, stakingInfo.rewardPercentage ? `${stakingInfo.rewardPercentage}%` : null)), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      color: \"#ffffff\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, \"Minimum Amount to Stake: \"), /*#__PURE__*/React.createElement(Text, {\n      color: \"#f6c179\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, stakingInfo.minAmount ? `${stakingInfo.minAmount / 10 ** 18} SBP` : null))), /*#__PURE__*/React.createElement(StakingInfoWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FlexDiv, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(StakingInfo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      color: \"#d5ccc8\",\n      width: \"10rem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, \"Your SBPs in Staking :\", ' '), /*#__PURE__*/React.createElement(Text, {\n      color: \"#f6c179\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }, Store.stakingInfo.accountStakingTotal / 10 ** 18, \" SBP\", ' ')), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      color: \"#d5ccc8\",\n      width: \"10rem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, \"TotalEstimatedRewards :\", ' '), /*#__PURE__*/React.createElement(Text, {\n      color: \"#f6c179\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }\n    }, Store.stakingInfo.totalExpectedReward / 10 ** 18, \" SBP\", ' ')), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      color: \"#d5ccc8\",\n      width: \"10rem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }, \"Account Tier :\"), /*#__PURE__*/React.createElement(Text, {\n      color: \"#f6c179\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }, \" \", Store.stakingInfo.tier, \" \")), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      color: \"#d5ccc8\",\n      width: \"10rem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    }, \"Account SBP Balance :\", ' '), /*#__PURE__*/React.createElement(Text, {\n      color: \"#f6c179\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    }, Store.stakingInfo.SBPBalance / 10 ** 18, \" SBP \"))), /*#__PURE__*/React.createElement(Logo, {\n      src: shiba,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Input, {\n      style: {\n        marginTop: '1rem'\n      },\n      onChange: handleAmount,\n      value: stakingAmount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FlexDiv, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(StakeButton, {\n      onClick: handleStake,\n      disabled: disable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }\n    }, stakeable(Store.stakingInfo.allowance, SA) ? 'StakeSBP' : 'ApproveSBP'))));\n  });\n};\n\nexport default StakingBox;\nconst StakingWrapper = styled.div`\n  border-radius: 1rem;\n  border: solid 0.13rem #f6c179;\n  margin: 0 1rem 0 1rem;\n  background-color: #594139;\n`;\nconst SelectWrapper = styled.div`\n  background-color: #74564a;\n  border-radius: 0.85rem 0.85rem 0 0;\n  padding: 1rem;\n`;\nconst SelectBoxWrapper = styled.div`\n  padding: 0.5rem;\n  display: flex;\n  flex: 1 1 0;\n`;\nconst SelectBox = styled.button`\n  border-radius: 0.25rem;\n  border: ${props => props.checked ? 'solid 2px #fff' : 'none'};\n  /* margin: 0.1rem 0.5rem 0.1rem 0.5rem; */\n  margin: auto 0.1rem auto 0.1rem;\n  color: ${props => props.checked ? '#fff' : '#74564a'};\n  background-color: ${props => props.checked ? '#66ac5b' : '#d5ccc8'};\n  &:hover {\n    background-color: #66ac5b;\n    color: '#74564a';\n  }\n  font-family: Teko;\n  font-size: 1.3rem;\n  transition: background-color 0.25s ease-out 100ms;\n`;\nconst StakingInfoWrapper = styled.div`\n  padding: 1rem;\n  border-radius: 0 0 0.85rem 0.85rem;\n  background-color: #594139;\n  /* display: flex; */\n`;\nconst StakingInfo = styled.div`\n  flex: auto;\n  min-width: 11rem;\n`;\nconst Logo = styled.img`\n  width: 8rem;\n  @media (max-width: 500px) {\n    width: 6rem;\n  }\n  @media (max-width: 360px) {\n    width: 4rem;\n  }\n  object-fit: contain;\n\n  margin: 0 0 0 1rem;\n`;\nconst FlexDiv = styled.div`\n  display: flex;\n`;\nconst StakeButton = styled.button`\n  width: 7rem;\n  height: 2rem;\n  border-radius: 1rem;\n  border: solid 2px #d5ccc8;\n  background-color: #66ac5b;\n  font-family: Teko;\n  font-size: 1.3rem;\n  font-weight: 500;\n  font-stretch: normal;\n  font-style: normal;\n  /* line-height: 1; */\n  letter-spacing: normal;\n  text-align: center;\n  color: #fff;\n  margin: 1rem auto 0 auto;\n  ${props => {\n  if (props.disabled) {\n    return 'border: solid 2px #757575; background-color: #74564a; color: #757575';\n  }\n}}\n`;","map":{"version":3,"sources":["C:/Users/user/Desktop/SBPGIT/DAPP_Staking_SBP/src/component/StakingBox.js"],"names":["React","useEffect","useState","styled","shiba","Store","Input","Text","Row","useObserver","useAlert","stakeable","allownce","stakeAmount","Number","StakingBox","alert","stakingInfo","setStakingInfo","stakingAmount","setStakingAmount","SA","setSA","disable","setDisable","storageId","account","minAmount","SBPBalance","allowance","handleSelect","info","handleAmount","e","value","target","handleStake","getSBPBalance","then","res","stakeSBP","amount","console","log","result","show","msg","type","fetchAccountInfo","ApproveMaxBalance","typed","TVL","stakingPool","length","map","elem","index","name","rewardPercentage","accountStakingTotal","totalExpectedReward","tier","marginTop","StakingWrapper","div","SelectWrapper","SelectBoxWrapper","SelectBox","button","props","checked","StakingInfoWrapper","StakingInfo","Logo","img","FlexDiv","StakeButton","disabled"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport shiba from '../assets/shiba.png';\nimport Store from '../store/store';\nimport Input from './Input';\nimport { Text, Row } from './style';\nimport { useObserver } from 'mobx-react';\nimport { useAlert } from 'react-alert';\n\nconst stakeable = (allownce, stakeAmount) => {\n  return Number(allownce) >= Number(stakeAmount);\n};\nconst StakingBox = () => {\n  const alert = useAlert();\n  const [stakingInfo, setStakingInfo] = useState({});\n  const [stakingAmount, setStakingAmount] = useState('');\n  const [SA, setSA] = useState('');\n  const [disable, setDisable] = useState(true);\n\n  useEffect(() => {\n    if (\n      (stakingInfo.storageId &&\n        SA &&\n        Store.account &&\n        Number(stakingInfo.minAmount) <= Number(SA) &&\n        Number(SA) <= Number(Store.stakingInfo.SBPBalance)) ||\n      !stakeable(Store.stakingInfo.allowance, SA)\n    )\n      setDisable(false);\n    else setDisable(true);\n  }, [\n    Store.stakingInfo.SBPBalance,\n    Store.account,\n    Store.stakingInfo.allowance,\n    stakingAmount,\n    stakingInfo,\n    SA,\n  ]);\n\n  const handleSelect = info => setStakingInfo(info);\n\n  const handleAmount = e => {\n    const { value } = e.target;\n    if (value && value > 0) setStakingAmount(value);\n    if (value && value > 0) setSA(value*1000000000000000000);\n    if (!value) setStakingAmount('');\n    if (!value) setSA('');\n  };\n\n  const handleStake = async () => {\n    if (stakeable(Store.stakingInfo.allowance, SA)) {\n      Store.getSBPBalance().then(async res => {\n        if (\n          res &&\n          Store.account &&\n          stakingAmount > 0 &&\n          Number(SA) <= Number(Store.stakingInfo.SBPBalance)\n        ) {\n          await Store.stakeSBP({\n            amount: SA,\n            storageId: stakingInfo.storageId,\n          }).then(res => {\n            if (res) console.log('box', res);\n            if (res.result) {\n              // success\n              alert.show(res.msg, { type: 'success' });\n              Store.fetchAccountInfo();\n              // TVL, staking balance, total Expected Reward, tier, sbp balance, stakingList\n            } else {\n              // fail\n              alert.show(res.msg, { type: 'error' });\n            }\n          });\n        } else {\n          //balance err\n        }\n      });\n    } else {\n      Store.ApproveMaxBalance().then(res => {\n        if (res.result) {\n          alert.show(res.msg, { typed: 'success' });\n        } else {\n          alert.show(res.msg, { type: 'error' });\n        }\n      });\n    }\n  };\n  return useObserver(() => {\n    return (\n      <StakingWrapper>\n        <SelectWrapper>\n          <Row>\n            <Text color=\"#ffffff\">Total Value Locked : </Text>\n            <Text color=\"#f6c179\">{Store.stakingInfo.TVL/10**18} SBP</Text>\n          </Row>\n          <Row>\n            <Text color=\"#ffffff\">Locked Period : </Text>\n          </Row>\n          <SelectBoxWrapper>\n            {Store.stakingPool &&\n              Store.stakingPool.length > 0 &&\n              Store.stakingPool.map((elem, index) => {\n                return (\n                  <SelectBox\n                    checked={stakingInfo.storageId === elem.storageId}\n                    onClick={() => handleSelect(elem)}\n                    onClickCapture={() => setStakingAmount('')}\n                  >\n                    {elem.name}\n                  </SelectBox>\n                );\n              })}\n          </SelectBoxWrapper>\n          <Row>\n            <Text color=\"#ffffff\">Reward rate for </Text>\n            <Text color=\"#66ac5b\">\n              {stakingInfo.name ? `${stakingInfo.name} : ` : null}\n            </Text>\n            <Text color=\"#f6c179\">\n              {stakingInfo.rewardPercentage\n                ? `${stakingInfo.rewardPercentage}%`\n                : null}\n            </Text>\n          </Row>\n          <Row>\n            <Text color=\"#ffffff\">Minimum Amount to Stake: </Text>\n            <Text color=\"#f6c179\">\n              {stakingInfo.minAmount ? `${stakingInfo.minAmount/10**18} SBP` : null}\n            </Text>\n          </Row>\n        </SelectWrapper>\n        <StakingInfoWrapper>\n          <FlexDiv>\n            <StakingInfo>\n              <Row>\n                <Text color=\"#d5ccc8\" width=\"10rem\">\n                  Your SBPs in Staking :{' '}\n                </Text>\n                <Text color=\"#f6c179\">\n                  {Store.stakingInfo.accountStakingTotal/10**18} SBP{' '}\n                </Text>\n              </Row>\n              <Row>\n                <Text color=\"#d5ccc8\" width=\"10rem\">\n                  TotalEstimatedRewards :{' '}\n                </Text>\n                <Text color=\"#f6c179\">\n                  {Store.stakingInfo.totalExpectedReward/10**18} SBP{' '}\n                </Text>\n              </Row>\n              <Row>\n                <Text color=\"#d5ccc8\" width=\"10rem\">\n                  Account Tier :\n                </Text>\n                <Text color=\"#f6c179\"> {Store.stakingInfo.tier} </Text>\n              </Row>\n              <Row>\n                <Text color=\"#d5ccc8\" width=\"10rem\">\n                  Account SBP Balance :{' '}\n                </Text>\n                <Text color=\"#f6c179\">{Store.stakingInfo.SBPBalance/10**18} SBP </Text>\n              </Row>\n            </StakingInfo>\n            <Logo src={shiba} />\n          </FlexDiv>\n          <Input\n            style={{ marginTop: '1rem' }}\n            onChange={handleAmount}\n            value={stakingAmount}\n          />\n          <FlexDiv>\n            <StakeButton onClick={handleStake} disabled={disable}>\n              {stakeable(Store.stakingInfo.allowance, SA)\n                ? 'StakeSBP'\n                : 'ApproveSBP'}\n            </StakeButton>\n          </FlexDiv>\n        </StakingInfoWrapper>\n      </StakingWrapper>\n    );\n  });\n};\n\nexport default StakingBox;\n\nconst StakingWrapper = styled.div`\n  border-radius: 1rem;\n  border: solid 0.13rem #f6c179;\n  margin: 0 1rem 0 1rem;\n  background-color: #594139;\n`;\nconst SelectWrapper = styled.div`\n  background-color: #74564a;\n  border-radius: 0.85rem 0.85rem 0 0;\n  padding: 1rem;\n`;\nconst SelectBoxWrapper = styled.div`\n  padding: 0.5rem;\n  display: flex;\n  flex: 1 1 0;\n`;\nconst SelectBox = styled.button`\n  border-radius: 0.25rem;\n  border: ${props => (props.checked ? 'solid 2px #fff' : 'none')};\n  /* margin: 0.1rem 0.5rem 0.1rem 0.5rem; */\n  margin: auto 0.1rem auto 0.1rem;\n  color: ${props => (props.checked ? '#fff' : '#74564a')};\n  background-color: ${props => (props.checked ? '#66ac5b' : '#d5ccc8')};\n  &:hover {\n    background-color: #66ac5b;\n    color: '#74564a';\n  }\n  font-family: Teko;\n  font-size: 1.3rem;\n  transition: background-color 0.25s ease-out 100ms;\n`;\nconst StakingInfoWrapper = styled.div`\n  padding: 1rem;\n  border-radius: 0 0 0.85rem 0.85rem;\n  background-color: #594139;\n  /* display: flex; */\n`;\n\nconst StakingInfo = styled.div`\n  flex: auto;\n  min-width: 11rem;\n`;\nconst Logo = styled.img`\n  width: 8rem;\n  @media (max-width: 500px) {\n    width: 6rem;\n  }\n  @media (max-width: 360px) {\n    width: 4rem;\n  }\n  object-fit: contain;\n\n  margin: 0 0 0 1rem;\n`;\n\nconst FlexDiv = styled.div`\n  display: flex;\n`;\n\nconst StakeButton = styled.button`\n  width: 7rem;\n  height: 2rem;\n  border-radius: 1rem;\n  border: solid 2px #d5ccc8;\n  background-color: #66ac5b;\n  font-family: Teko;\n  font-size: 1.3rem;\n  font-weight: 500;\n  font-stretch: normal;\n  font-style: normal;\n  /* line-height: 1; */\n  letter-spacing: normal;\n  text-align: center;\n  color: #fff;\n  margin: 1rem auto 0 auto;\n  ${props => {\n    if (props.disabled) {\n      return 'border: solid 2px #757575; background-color: #74564a; color: #757575';\n    }\n  }}\n`;\n"]},"metadata":{},"sourceType":"module"}