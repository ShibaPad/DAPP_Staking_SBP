{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\SBPGIT\\\\DAPP_Staking_SBP\\\\src\\\\component\\\\Main.js\";\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport StatkingInfoBox from './StakingInfoBox';\nimport Header from './Header';\nimport StakingBox from './StakingBox';\nimport Store from '../store/store';\nimport { useObserver } from 'mobx-react';\nimport CustomModal from './Modal'; //  Store.stakedPools = {\n//   0: \"664453334\", //staking amount\n// 1: \"1699150422\", // release data\n// 2: true, //isSet\n// 3: false, //claimed\n// 4: \"9\", // poolreward\n// 5: \"2\",\n// PoolRewardPercentage: \"9\",\n// amount: \"664453334\",\n// claimed: false,\n// isSet: true,\n// releaseDate: \"1699150422\",\n// storageId: \"2\",\n// stakingId: \"1\",\n// }\n\nconst Main = () => {\n  useEffect(() => {\n    Store.fetchContract().then(res => {\n      if (res) {\n        Store.getStakingPool(); // storage 정보\n\n        Store.getTVL();\n        Store.getPenaltyFee();\n      }\n    });\n  }, []);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [modalType, setModalType] = useState('claim');\n  const [stakingId, setStakingId] = useState('');\n\n  const handleClaim = _ref => {\n    let {\n      stakingId,\n      type\n    } = _ref;\n    setModalVisible(true);\n    setModalType(type);\n    setStakingId(stakingId);\n  };\n\n  const handleClose = () => {\n    setModalVisible(false);\n  };\n\n  return useObserver(() => {\n    return /*#__PURE__*/React.createElement(MainContainer, {\n      className: \"MainContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(StakingBox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Dividence, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }), Store.stakedPools && Store.stakedPools.length > 0 && Store.stakedPools.map(elem => {\n      return !elem.claimed ? /*#__PURE__*/React.createElement(StatkingInfoBox, {\n        stakingInfo: elem,\n        handleClaim: handleClaim,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }\n      }) : null;\n    }), /*#__PURE__*/React.createElement(CustomModal, {\n      visible: modalVisible,\n      onRequestClose: handleClose,\n      type: modalType,\n      stakingId: stakingId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }));\n  });\n};\n\nexport default Main;\nconst MainContainer = styled.div`\n  display: flex;\n  flex-flow: column;\n  color: blue;\n  height: 100vh;\n  /* background-color: red; */\n  min-width: 320px;\n  max-width: 640px;\n  margin: 1.5rem auto 1.5rem auto;\n`;\nconst Dividence = styled.div`\n  margin: 1rem;\n  height: 2px;\n  background-color: #74564a;\n`;","map":{"version":3,"sources":["C:/Users/user/Desktop/SBPGIT/DAPP_Staking_SBP/src/component/Main.js"],"names":["React","useState","useEffect","styled","StatkingInfoBox","Header","StakingBox","Store","useObserver","CustomModal","Main","fetchContract","then","res","getStakingPool","getTVL","getPenaltyFee","modalVisible","setModalVisible","modalType","setModalType","stakingId","setStakingId","handleClaim","type","handleClose","stakedPools","length","map","elem","claimed","MainContainer","div","Dividence"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,eAAP,MAA4B,kBAA5B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,OAAOC,WAAP,MAAwB,SAAxB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjBR,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,KAAK,CAACI,aAAN,GAAsBC,IAAtB,CAA2BC,GAAG,IAAI;AAChC,UAAIA,GAAJ,EAAS;AACPN,QAAAA,KAAK,CAACO,cAAN,GADO,CACiB;;AACxBP,QAAAA,KAAK,CAACQ,MAAN;AACAR,QAAAA,KAAK,CAACS,aAAN;AACD;AACF,KAND;AAOD,GARQ,EAQN,EARM,CAAT;AAUA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCjB,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACkB,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,OAAD,CAA1C;AACA,QAAM,CAACoB,SAAD,EAAYC,YAAZ,IAA4BrB,QAAQ,CAAC,EAAD,CAA1C;;AACA,QAAMsB,WAAW,GAAG,QAAyB;AAAA,QAAxB;AAAEF,MAAAA,SAAF;AAAaG,MAAAA;AAAb,KAAwB;AAC3CN,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAE,IAAAA,YAAY,CAACI,IAAD,CAAZ;AACAF,IAAAA,YAAY,CAACD,SAAD,CAAZ;AACD,GAJD;;AAKA,QAAMI,WAAW,GAAG,MAAM;AACxBP,IAAAA,eAAe,CAAC,KAAD,CAAf;AACD,GAFD;;AAIA,SAAOV,WAAW,CAAC,MAAM;AACvB,wBACE,oBAAC,aAAD;AAAe,MAAA,SAAS,EAAC,eAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIGD,KAAK,CAACmB,WAAN,IACCnB,KAAK,CAACmB,WAAN,CAAkBC,MAAlB,GAA2B,CAD5B,IAECpB,KAAK,CAACmB,WAAN,CAAkBE,GAAlB,CAAsBC,IAAI,IAAI;AAC5B,aAAO,CAACA,IAAI,CAACC,OAAN,gBACL,oBAAC,eAAD;AAAiB,QAAA,WAAW,EAAED,IAA9B;AAAoC,QAAA,WAAW,EAAEN,WAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADK,GAEH,IAFJ;AAGD,KAJD,CANJ,eAWE,oBAAC,WAAD;AACE,MAAA,OAAO,EAAEN,YADX;AAEE,MAAA,cAAc,EAAEQ,WAFlB;AAGE,MAAA,IAAI,EAAEN,SAHR;AAIE,MAAA,SAAS,EAAEE,SAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CADF;AAoBD,GArBiB,CAAlB;AAsBD,CA7CD;;AA8CA,eAAeX,IAAf;AAEA,MAAMqB,aAAa,GAAG5B,MAAM,CAAC6B,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;AAWA,MAAMC,SAAS,GAAG9B,MAAM,CAAC6B,GAAI;AAC7B;AACA;AACA;AACA,CAJA","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport StatkingInfoBox from './StakingInfoBox';\nimport Header from './Header';\nimport StakingBox from './StakingBox';\nimport Store from '../store/store';\nimport { useObserver } from 'mobx-react';\nimport CustomModal from './Modal';\n//  Store.stakedPools = {\n//   0: \"664453334\", //staking amount\n// 1: \"1699150422\", // release data\n// 2: true, //isSet\n// 3: false, //claimed\n// 4: \"9\", // poolreward\n// 5: \"2\",\n// PoolRewardPercentage: \"9\",\n// amount: \"664453334\",\n// claimed: false,\n// isSet: true,\n// releaseDate: \"1699150422\",\n// storageId: \"2\",\n// stakingId: \"1\",\n// }\n\nconst Main = () => {\n  useEffect(() => {\n    Store.fetchContract().then(res => {\n      if (res) {\n        Store.getStakingPool(); // storage 정보\n        Store.getTVL();\n        Store.getPenaltyFee();\n      }\n    });\n  }, []);\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [modalType, setModalType] = useState('claim');\n  const [stakingId, setStakingId] = useState('');\n  const handleClaim = ({ stakingId, type }) => {\n    setModalVisible(true);\n    setModalType(type);\n    setStakingId(stakingId);\n  };\n  const handleClose = () => {\n    setModalVisible(false);\n  };\n\n  return useObserver(() => {\n    return (\n      <MainContainer className=\"MainContainer\">\n        <Header />\n        <StakingBox />\n        <Dividence />\n        {Store.stakedPools &&\n          Store.stakedPools.length > 0 &&\n          Store.stakedPools.map(elem => {\n            return !elem.claimed ? (\n              <StatkingInfoBox stakingInfo={elem} handleClaim={handleClaim} />\n            ) : null;\n          })}\n        <CustomModal\n          visible={modalVisible}\n          onRequestClose={handleClose}\n          type={modalType}\n          stakingId={stakingId}\n        />\n      </MainContainer>\n    );\n  });\n};\nexport default Main;\n\nconst MainContainer = styled.div`\n  display: flex;\n  flex-flow: column;\n  color: blue;\n  height: 100vh;\n  /* background-color: red; */\n  min-width: 320px;\n  max-width: 640px;\n  margin: 1.5rem auto 1.5rem auto;\n`;\n\nconst Dividence = styled.div`\n  margin: 1rem;\n  height: 2px;\n  background-color: #74564a;\n`;\n"]},"metadata":{},"sourceType":"module"}