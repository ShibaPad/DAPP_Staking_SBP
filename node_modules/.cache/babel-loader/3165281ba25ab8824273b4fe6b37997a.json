{"ast":null,"code":"import _taggedTemplateLiteral from\"C:\\\\Users\\\\user\\\\Desktop\\\\shibapad_staking-main (2)\\\\shibapad_staking-main\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";import _slicedToArray from\"C:\\\\Users\\\\user\\\\Desktop\\\\shibapad_staking-main (2)\\\\shibapad_staking-main\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5;import React,{useState,useEffect}from'react';import styled from'styled-components';import{Text}from'./style';import moment from'moment';import{useObserver}from'mobx-react';import Store from'../store/store';var handleButtonType=function handleButtonType(mode){switch(mode){case'disable':return'border: solid 2px #757575; background-color: #74564a; color: #757575';case'claim':return'border: solid 2px #d5ccc8; background-color: #66ac5b; color: #fff;';case'emergencyClaim':return'border: solid 2px #eb5757; background-color: #757575; color: #eb5757;';}};// const isClaimable = date => {\n//   // const nowUTC = moment().utc().format('MM/DD/YYYY HH:mm:ss');\n//   // const releaseDate = date.split(' ').slice(0, -1).toString().replace(',', ' ');\n//   // return new Date(nowUTC) >= new Date(releaseDate);\n//   return true;\n// };\nvar timeStampConvertor=function timeStampConvertor(date){return moment(new Date(date*1000)).utc().format('MM/DD/YYYY HH:mm:ss');};var StakingInfoBox=function StakingInfoBox(_ref){var stakingInfo=_ref.stakingInfo,handleClaim=_ref.handleClaim;var stakingId=stakingInfo.stakingId,amount=stakingInfo.amount,releaseDate=stakingInfo.releaseDate;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),disable=_useState2[0],setDisable=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),expectedReward=_useState4[0],setExpectedReward=_useState4[1];useEffect(function(){Store.getStakeStatus(stakingId).then(function(res){if(res){if(res[2]){// 미 도래 시점, emergency\nsetDisable(true);}else{setDisable(false);}}},[]);Store.getExpectedPoolReward(stakingId).then(function(res){if(res)setExpectedReward(res);});},[]);// needs setDisable logic\nreturn useObserver(function(){return/*#__PURE__*/React.createElement(StakingContainer,null,/*#__PURE__*/React.createElement(StakingID,null,/*#__PURE__*/React.createElement(Text,{color:\"#74564a\"},\"Staking ID : #\",stakingId)),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Text,{color:\"#fff\",width:\"10rem\"},\"Staking Amount:\",' '),/*#__PURE__*/React.createElement(Text,{color:\"#f6c179\"},amount/Math.pow(10,18),\" SBP\")),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Text,{color:\"#fff\",width:\"10rem\"},\"Estimated Reward :\",' '),/*#__PURE__*/React.createElement(Text,{color:\"#f6c179\"},expectedReward/Math.pow(10,18),\" SBP  (0 for emergency claim)\")),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Text,{color:\"#fff\",width:\"10rem\"},\"Estimated Total SBP:\",' '),/*#__PURE__*/React.createElement(Text,{color:\"#f6c179\"},amount/Math.pow(10,18)+expectedReward/Math.pow(10,18),\" SBP\")),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Text,{color:\"#fff\",width:\"10rem\"},\"Release at :\",' '),/*#__PURE__*/React.createElement(Text,{color:disable?'#66ac5b':'#eb5757'},timeStampConvertor(releaseDate),\" UTC\")),/*#__PURE__*/React.createElement(ButtonWrapper,null,/*#__PURE__*/React.createElement(ClaimButton,{mode:disable?'claim':'disable',disabled:!disable,onClick:function onClick(){return handleClaim({stakingId:stakingId,type:'claim'});}},\"Claim\"),/*#__PURE__*/React.createElement(ClaimButton,{mode:!disable?'emergencyClaim':'disable',disabled:disable,onClick:function onClick(){return handleClaim({stakingId:stakingId,type:'emergencyClaim'});}},\"EmergencyClaim\")));});};export default StakingInfoBox;var StakingContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  /* height: 160px; */\\n  flex-grow: 0;\\n  border-radius: 15px;\\n  background-color: #74564a;\\n  margin: 0 1rem 1rem 1rem;\\n\"])));var StakingID=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  margin: 1rem 0 0;\\n  padding-left: 1.5rem;\\n  width: 10rem;\\n  height: 1.8rem;\\n  background-color: #f6c179;\\n  line-height: 2rem;\\n  @media (max-width: 425px) {\\n    height: 1.2rem;\\n    line-height: 1rem;\\n  }\\n\"])));var Row=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  padding: 0.25rem 0 0.25rem 1.5rem; ;\\n\"])));var ButtonWrapper=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  padding: 0.25rem 1.5rem 0.25rem 1.5rem;\\n  display: flex;\\n  justify-content: center;\\n\"])));var ClaimButton=styled.button(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  //:disabled, claim, emergencyClaim\\n  font-family: Teko;\\n  font-size: 1rem;\\n  font-weight: 500;\\n  font-stretch: normal;\\n  font-style: normal;\\n  line-height: 1.75;\\n  margin: 0.7rem;\\n  width: 10rem;\\n  height: 2rem;\\n  border-radius: 15px;\\n  border: solid 2px #d5ccc8;\\n  \",\"\\n\"])),function(props){return handleButtonType(props.mode);});","map":{"version":3,"sources":["C:/Users/user/Desktop/shibapad_staking-main (2)/shibapad_staking-main/src/component/StakingInfoBox.js"],"names":["React","useState","useEffect","styled","Text","moment","useObserver","Store","handleButtonType","mode","timeStampConvertor","date","Date","utc","format","StakingInfoBox","stakingInfo","handleClaim","stakingId","amount","releaseDate","disable","setDisable","expectedReward","setExpectedReward","getStakeStatus","then","res","getExpectedPoolReward","type","StakingContainer","div","StakingID","Row","ButtonWrapper","ClaimButton","button","props"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Text } from './style';\nimport moment from 'moment';\nimport { useObserver } from 'mobx-react';\nimport Store from '../store/store';\nconst handleButtonType = mode => {\n  switch (mode) {\n    case 'disable':\n      return 'border: solid 2px #757575; background-color: #74564a; color: #757575';\n    case 'claim':\n      return 'border: solid 2px #d5ccc8; background-color: #66ac5b; color: #fff;';\n    case 'emergencyClaim':\n      return 'border: solid 2px #eb5757; background-color: #757575; color: #eb5757;';\n  }\n};\n// const isClaimable = date => {\n//   // const nowUTC = moment().utc().format('MM/DD/YYYY HH:mm:ss');\n//   // const releaseDate = date.split(' ').slice(0, -1).toString().replace(',', ' ');\n//   // return new Date(nowUTC) >= new Date(releaseDate);\n//   return true;\n// };\nconst timeStampConvertor = date => {\n  return moment(new Date(date * 1000))\n    .utc()\n    .format('MM/DD/YYYY HH:mm:ss');\n};\nconst StakingInfoBox = ({ stakingInfo, handleClaim }) => {\n  const { stakingId, amount, releaseDate } = stakingInfo;\n  const [disable, setDisable] = useState(false);\n  const [expectedReward, setExpectedReward] = useState('');\n  useEffect(() => {\n    Store.getStakeStatus(stakingId).then(res => {\n      if (res) {\n        if (res[2]) {\n          // 미 도래 시점, emergency\n          setDisable(true);\n        } else {\n          setDisable(false);\n        }\n      }\n    }, []);\n    Store.getExpectedPoolReward(stakingId).then(res => {\n      if (res) setExpectedReward(res);\n    });\n  }, []);\n  // needs setDisable logic\n\n  return useObserver(() => {\n    return (\n      <StakingContainer>\n        <StakingID>\n          <Text color=\"#74564a\">Staking ID : #{stakingId}</Text>\n        </StakingID>\n        <Row>\n          <Text color=\"#fff\" width=\"10rem\">\n            Staking Amount:{' '}\n          </Text>\n          <Text color=\"#f6c179\">{amount/10**18} SBP</Text>\n        </Row>\n        <Row>\n          <Text color=\"#fff\" width=\"10rem\">\n            Estimated Reward :{' '}\n          </Text>\n          <Text color=\"#f6c179\">{expectedReward/10**18} SBP  (0 for emergency claim)</Text>\n        </Row>\n        <Row>\n          <Text color=\"#fff\" width=\"10rem\">\n            Estimated Total SBP:{' '}\n          </Text>\n          <Text color=\"#f6c179\">{amount/10**18+expectedReward/10**18} SBP</Text>\n        </Row>\n        <Row>\n          <Text color=\"#fff\" width=\"10rem\">\n            Release at :{' '}\n          </Text>\n          <Text color={disable ? '#66ac5b' : '#eb5757'}>\n            {timeStampConvertor(releaseDate)} UTC\n          </Text>\n        </Row>\n        <ButtonWrapper>\n          <ClaimButton\n            mode={disable ? 'claim' : 'disable'}\n            disabled={!disable}\n            onClick={() => handleClaim({ stakingId: stakingId, type: 'claim' })}\n          >\n            Claim\n          </ClaimButton>\n          <ClaimButton\n            mode={!disable ? 'emergencyClaim' : 'disable'}\n            disabled={disable}\n            onClick={() =>\n              handleClaim({ stakingId: stakingId, type: 'emergencyClaim' })\n            }\n          >\n            EmergencyClaim\n          </ClaimButton>\n        </ButtonWrapper>\n      </StakingContainer>\n    );\n  });\n};\n\nexport default StakingInfoBox;\n\nconst StakingContainer = styled.div`\n  /* height: 160px; */\n  flex-grow: 0;\n  border-radius: 15px;\n  background-color: #74564a;\n  margin: 0 1rem 1rem 1rem;\n`;\n\nconst StakingID = styled.div`\n  margin: 1rem 0 0;\n  padding-left: 1.5rem;\n  width: 10rem;\n  height: 1.8rem;\n  background-color: #f6c179;\n  line-height: 2rem;\n  @media (max-width: 425px) {\n    height: 1.2rem;\n    line-height: 1rem;\n  }\n`;\n\nconst Row = styled.div`\n  padding: 0.25rem 0 0.25rem 1.5rem; ;\n`;\n\nconst ButtonWrapper = styled.div`\n  padding: 0.25rem 1.5rem 0.25rem 1.5rem;\n  display: flex;\n  justify-content: center;\n`;\n\nconst ClaimButton = styled.button`\n  //:disabled, claim, emergencyClaim\n  font-family: Teko;\n  font-size: 1rem;\n  font-weight: 500;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.75;\n  margin: 0.7rem;\n  width: 10rem;\n  height: 2rem;\n  border-radius: 15px;\n  border: solid 2px #d5ccc8;\n  ${props => handleButtonType(props.mode)}\n`;\n"]},"metadata":{},"sourceType":"module"}