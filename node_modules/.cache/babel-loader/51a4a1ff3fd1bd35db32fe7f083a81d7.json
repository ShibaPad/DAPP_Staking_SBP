{"ast":null,"code":"import React,{useEffect}from'react';import logo from\"./logo.svg\";import'./App.css';import Main from'./component/Main';import Store from'./store/store';// import AlertTemplate from './component/alert';\nimport AlertTemplate from'react-alert-template-basic';import{transitions,positions,Provider as AlertProvider}from'react-alert';var options={// you can also just use 'bottom center'\nposition:positions.MIDDLE,timeout:3000,offset:'30px',// you can also just use 'scale'\ntransition:transitions.SCALE};function App(){return/*#__PURE__*/React.createElement(AlertProvider,Object.assign({template:AlertTemplate},options),/*#__PURE__*/React.createElement(Main,null));}export default App;","map":{"version":3,"sources":["C:/Users/user/Desktop/shibapad_staking-main (2)/shibapad_staking-main/src/App.js"],"names":["React","useEffect","Main","Store","AlertTemplate","transitions","positions","Provider","AlertProvider","options","position","MIDDLE","timeout","offset","transition","SCALE","App"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,C,6BAEA,MAAO,WAAP,CACA,MAAOC,CAAAA,IAAP,KAAiB,kBAAjB,CACA,MAAOC,CAAAA,KAAP,KAAkB,eAAlB,CACA;AACA,MAAOC,CAAAA,aAAP,KAA0B,4BAA1B,CACA,OAASC,WAAT,CAAsBC,SAAtB,CAAiCC,QAAQ,GAAIC,CAAAA,aAA7C,KAAkE,aAAlE,CAEA,GAAMC,CAAAA,OAAO,CAAG,CACd;AACAC,QAAQ,CAAEJ,SAAS,CAACK,MAFN,CAGdC,OAAO,CAAE,IAHK,CAIdC,MAAM,CAAE,MAJM,CAKd;AACAC,UAAU,CAAET,WAAW,CAACU,KANV,CAAhB,CASA,QAASC,CAAAA,GAAT,EAAe,CACb,mBACE,oBAAC,aAAD,gBAAe,QAAQ,CAAEZ,aAAzB,EAA4CK,OAA5C,eACE,oBAAC,IAAD,MADF,CADF,CAKD,CAED,cAAeO,CAAAA,GAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Main from './component/Main';\nimport Store from './store/store';\n// import AlertTemplate from './component/alert';\nimport AlertTemplate from 'react-alert-template-basic';\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert';\n\nconst options = {\n  // you can also just use 'bottom center'\n  position: positions.MIDDLE,\n  timeout: 3000,\n  offset: '30px',\n  // you can also just use 'scale'\n  transition: transitions.SCALE,\n};\n\nfunction App() {\n  return (\n    <AlertProvider template={AlertTemplate} {...options}>\n      <Main />\n    </AlertProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}